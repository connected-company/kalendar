{"remainingRequest":"/home/david/workspace/kalendar/node_modules/babel-loader/lib/index.js!/home/david/workspace/kalendar/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/workspace/kalendar/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/workspace/kalendar/src/components/kalendar/kalendar-container.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/workspace/kalendar/src/components/kalendar/kalendar-container.vue","mtime":1566979661606},{"path":"/home/david/workspace/kalendar/node_modules/cache-loader/dist/cjs.js","mtime":1564752366860},{"path":"/home/david/workspace/kalendar/node_modules/babel-loader/lib/index.js","mtime":1564752363126},{"path":"/home/david/workspace/kalendar/node_modules/cache-loader/dist/cjs.js","mtime":1564752366860},{"path":"/home/david/workspace/kalendar/node_modules/vue-loader/lib/index.js","mtime":1564752367572}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es6.date.to-iso-string\";\nimport \"core-js/modules/es6.object.define-property\";\nimport _defineProperty from \"/home/david/workspace/kalendar/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _typeof from \"/home/david/workspace/kalendar/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.array.is-array\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport PortalVue from 'portal-vue';\nimport Utils from \"./utils.js\";\nwindow.kalendarHelpers = {};\n\nfor (var _i = 0, _Object$keys = Object.keys(Utils); _i < _Object$keys.length; _i++) {\n  var util = _Object$keys[_i];\n  window.kalendarHelpers[util] = Utils[util];\n}\n\nVue.use(PortalVue);\nvar crypto = window.crypto || window.msCrypto; // IE11 Polyfill\n\nvar days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; // we are going to use web workers to do the heavy lifting\n// needed for our kalendar component to work and render correctly\n\nimport myWorker from '@/components/kalendar/workers';\nexport default {\n  components: {\n    KalendarWeekView: function KalendarWeekView() {\n      return import(\"./kalendar-weekview.vue\");\n    }\n  },\n  props: {\n    // this provided array will be kept in sync\n    events: {\n      required: true,\n      type: Array,\n      validator: function validator(val) {\n        return Array.isArray(val);\n      }\n    },\n    // use this to enable/disable stuff which\n    // are supported by Kalendar itself\n    configuration: {\n      type: Object,\n      required: false,\n      validator: function validator(val) {\n        return _typeof(val) === 'object';\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var today = kalendarHelpers.getHourlessDate();\n    return {\n      default_options: {\n        dark: false,\n        cell_height: 10,\n        scrollToNow: false,\n        current_day: today,\n        view_type: 'week',\n        style: 'material_design',\n        now: new Date(),\n        military_time: true,\n        read_only: false,\n        day_starts_at: 0,\n        day_ends_at: 24,\n        time_mode: 'relative',\n        overlap: true,\n        past_event_creation: true,\n        formatLeftHours: function formatLeftHours(date) {\n          return Utils.getDatelessHour(date, _this.configuration.military_time);\n        },\n        formatDayTitle: function formatDayTitle(date) {\n          var isoDate = new Date(date);\n          var dayName = isoDate.toUTCString().slice(0, 3);\n          var dayNumber = isoDate.getUTCDate();\n          return [dayName, dayNumber];\n        },\n        formatWeekNavigator: function formatWeekNavigator(isoDate) {\n          var startDate = Utils.startOfWeek(isoDate);\n          var endDate = Utils.endOfWeek(isoDate);\n          var startString = startDate.toUTCString().slice(5, 11);\n          var endString = endDate.toUTCString().slice(5, 11);\n          return \"\".concat(startString, \" - \").concat(endString);\n        },\n        formatDayNavigator: function formatDayNavigator(isoDate) {\n          var day = new Date(isoDate);\n          return day.toUTCString().slice(5, 11);\n        }\n      },\n      kalendar_events: null,\n      new_appointment: {},\n      scrollable: true\n    };\n  },\n  computed: {\n    kalendar_options: function kalendar_options() {\n      var options = this.default_options;\n      var provided_props = this.configuration;\n      var conditions = {\n        //dark: (val) => typeof val === 'boolean',\n        scrollToNow: function scrollToNow(val) {\n          return typeof val === 'boolean';\n        },\n        current_week: function current_week(val) {\n          return val === null;\n        },\n        current_day: function current_day(val) {\n          return !isNaN(Date.parse(val));\n        },\n        view_type: function view_type(val) {\n          return ['week', 'day'].includes(val);\n        },\n        cell_height: function cell_height(val) {\n          return !isNaN(val);\n        },\n        style: function style(val) {\n          return ['material_design', 'flat_design'].includes(val);\n        },\n        military_time: function military_time(val) {\n          return typeof val === 'boolean';\n        },\n        read_only: function read_only(val) {\n          return typeof val === 'boolean';\n        },\n        day_starts_at: function day_starts_at(val) {\n          return typeof val === 'number' && val >= 0 && val <= 24;\n        },\n        day_ends_at: function day_ends_at(val) {\n          return typeof val === 'number' && val >= 0 && val <= 24;\n        },\n        hide_dates: function hide_dates(val) {\n          return Array.isArray(val);\n        },\n        hide_days: function hide_days(val) {\n          return Array.isArray(val) && !val.find(function (n) {\n            return typeof n !== 'number';\n          });\n        },\n        overlap: function overlap(val) {\n          return typeof val === 'boolean';\n        },\n        past_event_creation: function past_event_creation(val) {\n          return typeof val === 'boolean';\n        },\n        formatLeftHours: function formatLeftHours(val) {\n          return typeof val === 'function';\n        },\n        formatDayTitle: function formatDayTitle(val) {\n          return typeof val === 'function';\n        },\n        formatWeekNavigator: function formatWeekNavigator(val) {\n          return typeof val === 'function';\n        }\n      };\n\n      for (var key in provided_props) {\n        if (conditions.hasOwnProperty(key) && conditions[key](provided_props[key])) {\n          options[key] = provided_props[key];\n        }\n      }\n\n      return options;\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.kalendar_events = this.events.map(function (event) {\n      return _objectSpread({}, event, {\n        id: event.id || kalendarHelpers.generateUUID()\n      });\n    });\n\n    this.$kalendar.getEvents = function () {\n      return _this2.kalendar_events.slice(0);\n    };\n\n    this.$kalendar.updateEvents = function (payload) {\n      _this2.kalendar_events = payload.map(function (event) {\n        return _objectSpread({}, event, {\n          id: event.id || kalendarHelpers.generateUUID()\n        });\n      });\n\n      _this2.$emit('update:events', payload.map(function (event) {\n        return {\n          from: event.from,\n          to: event.to,\n          data: event.data\n        };\n      }));\n    };\n  },\n  provide: function provide() {\n    var _this3 = this;\n\n    var provider = {};\n    Object.defineProperty(provider, 'kalendar_options', {\n      enumerable: true,\n      get: function get() {\n        return _this3.kalendar_options;\n      }\n    });\n    Object.defineProperty(provider, 'kalendar_events', {\n      enumerable: true,\n      get: function get() {\n        return _this3.kalendar_events;\n      }\n    });\n    return provider;\n  },\n  methods: {\n    previousDay: function previousDay() {\n      var _this4 = this;\n\n      var current_day = this.kalendar_options.current_day;\n      var target_day = kalendarHelpers.addDays(current_day, -1);\n      var config = kalendarHelpers.cloneObject(this.configuration);\n      config = _objectSpread({}, config, {\n        current_day: target_day.toISOString()\n      });\n      this.$emit('update:configuration', config);\n      setTimeout(function () {\n        _this4.$kalendar.buildWeek();\n      });\n    },\n    nextDay: function nextDay() {\n      var _this5 = this;\n\n      var current_day = this.kalendar_options.current_day;\n      var target_day = kalendarHelpers.addDays(current_day, 1);\n      var config = kalendarHelpers.cloneObject(this.configuration);\n      config = _objectSpread({}, config, {\n        current_day: target_day.toISOString()\n      });\n      this.$emit('update:configuration', config);\n      setTimeout(function () {\n        _this5.$kalendar.buildWeek();\n      });\n    },\n    previousWeek: function previousWeek() {\n      var _this6 = this;\n\n      var current_day = this.kalendar_options.current_day;\n      var nextWeek = new Date(current_day);\n      nextWeek.setDate(nextWeek.getDate() - 7);\n      nextWeek.setUTCHours(0, 0, 0, 0);\n      var config = kalendarHelpers.cloneObject(this.configuration);\n      config = _objectSpread({}, config, {\n        current_day: nextWeek.toISOString()\n      });\n      this.$emit('update:configuration', config);\n      setTimeout(function () {\n        _this6.$kalendar.buildWeek();\n      });\n    },\n    nextWeek: function nextWeek() {\n      var _this7 = this;\n\n      var current_day = this.kalendar_options.current_day;\n      var nextWeek = new Date(current_day);\n      nextWeek.setDate(nextWeek.getDate() + 7);\n      nextWeek.setUTCHours(0, 0, 0, 0);\n      var config = kalendarHelpers.cloneObject(this.configuration);\n      config = _objectSpread({}, config, {\n        current_day: nextWeek.toISOString()\n      });\n      this.$emit('update:configuration', config);\n      setTimeout(function () {\n        _this7.$kalendar.buildWeek();\n      });\n    },\n    getTime: function getTime(date) {\n      var dateObj = new Date(date);\n      var minutes = dateObj.getUTCHours().toString().padStart(2, 0);\n      var seconds = dateObj.getUTCMinutes().toString().padStart(2, 0);\n      return \"\".concat(minutes, \":\").concat(seconds);\n    },\n    addAppointment: function addAppointment(popup_info) {\n      var payload = {\n        data: {\n          title: this.new_appointment.title,\n          description: this.new_appointment.description\n        },\n        from: popup_info.start_time,\n        to: popup_info.end_time\n      };\n      this.$kalendar.addNewEvent(payload);\n      this.$kalendar.closePopups();\n      this.clearFormData();\n    },\n    clearFormData: function clearFormData() {\n      this.new_appointment = {\n        description: null,\n        title: null\n      };\n    },\n    closePopups: function closePopups() {\n      this.$kalendar.closePopups();\n    }\n  }\n};",{"version":3,"sources":["kalendar-container.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"kalendar-wrapper\"\n       :class=\"{\n            'no-scroll': !scrollable,\n            'gstyle': kalendar_options.style === 'material_design',\n            'day-view': kalendar_options.view_type === 'day',\n    }\"\n       @touchstart=\"scrollable = false\"\n       @touchend=\"scrollable = true\">\n    <div class=\"week-navigator\">\n      <div class=\"nav-wrapper\"\n           v-if=\"kalendar_options.view_type === 'week'\">\n        <button class=\"week-navigator-button\" @click=\"previousWeek()\">\n          <svg style=\"transform: rotate(180deg)\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"css-i6dzq1\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\n        </button>\n        <div>\n          <span>{{ kalendar_options.formatWeekNavigator(kalendar_options.current_day) }}</span>\n        </div>\n        <button class=\"week-navigator-button\" @click=\"nextWeek()\">\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"css-i6dzq1\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\n        </button>\n      </div>\n      <div class=\"nav-wrapper\"\n           v-if=\"kalendar_options.view_type === 'day'\">\n        <button class=\"week-navigator-button\" @click=\"previousDay()\">\n          <svg style=\"transform: rotate(180deg)\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"css-i6dzq1\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\n        </button>\n        <div>\n          <span>{{ kalendar_options.formatDayNavigator(kalendar_options.current_day) }}</span>\n        </div>\n        <button class=\"week-navigator-button\" @click=\"nextDay()\">\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"css-i6dzq1\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\n        </button>\n      </div>\n    </div>\n    <kalendar-week-view />\n    <portal to=\"event-creation\"\n            class=\"slotable\">\n      <div slot-scope=\"information\"\n           class=\"creating-event\">\n        <slot name=\"creating-card\"\n              :event_information=\"information\">\n          <h4 class=\"appointment-title\"\n              style=\"text-align: left;\">\n            New Appointment\n          </h4>\n          <span class=\"time\">\n            {{getTime(information.start_time)}}\n            -\n            {{getTime(information.end_time)}}\n          </span>\n        </slot>\n      </div>\n    </portal>\n    <portal to=\"event-popup-form\"\n            class=\"slotable\">\n      <div slot-scope=\"information\"\n           class=\"popup-event\">\n        <slot name=\"popup-form\"\n              :popup_information=\"information\">\n          <h4 style=\"margin-bottom: 10px\">\n            New Appointment\n          </h4>\n          <input v-model=\"new_appointment['title']\"\n                 type=\"text\"\n                 name=\"title\"\n                 placeholder=\"Title\">\n          <textarea v-model=\"new_appointment['description']\"\n                    type=\"text\"\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    rows=\"2\"></textarea>\n          <div class=\"buttons\">\n            <button class=\"cancel\"\n                    @click=\"closePopups()\">\n              Cancel\n            </button>\n            <button @click=\"addAppointment(information)\">\n              Save\n            </button>\n          </div>\n        </slot>\n      </div>\n    </portal>\n    <portal to=\"event-details\"\n            class=\"slotable\">\n      <div slot-scope=\"information\"\n           class=\"created-event\">\n        <slot name=\"created-card\"\n              :event_information=\"information\">\n          <h4 style=\"margin-bottom: 5px\">{{information.title}}</h4>\n          <p>{{information.description}}</p>\n        </slot>\n      </div>\n    </portal>\n  </div>\n</template>\n<script>\nimport Vue from 'vue';\nimport PortalVue from 'portal-vue';\n\nimport Utils from \"./utils.js\";\nwindow.kalendarHelpers = {};\nfor (let util of Object.keys(Utils)) {\n  window.kalendarHelpers[util] = Utils[util];\n}\n\nVue.use(PortalVue);\n\nconst crypto = window.crypto || window.msCrypto; // IE11 Polyfill\n\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n// we are going to use web workers to do the heavy lifting\n// needed for our kalendar component to work and render correctly\nimport myWorker from '@/components/kalendar/workers';\n\nexport default {\n  components: {\n    KalendarWeekView: () =>\n      import('./kalendar-weekview.vue'),\n  },\n  props: {\n    // this provided array will be kept in sync\n    events: {\n      required: true,\n      type: Array,\n      validator: function(val) {\n        return Array.isArray(val);\n      }\n    },\n    // use this to enable/disable stuff which\n    // are supported by Kalendar itself\n    configuration: {\n      type: Object,\n      required: false,\n      validator: function(val) {\n        return typeof val === 'object';\n      },\n    },\n  },\n  data() {\n    let today = kalendarHelpers.getHourlessDate();\n    return {\n      default_options: {\n        dark: false,\n        cell_height: 10,\n        scrollToNow: false,\n        current_day: today,\n        view_type: 'week',\n        style: 'material_design',\n        now: new Date,\n        military_time: true,\n        read_only: false,\n        day_starts_at: 0,\n        day_ends_at: 24,\n        time_mode: 'relative',\n        overlap: true,\n        past_event_creation: true,\n        formatLeftHours: (date) => {\n          return Utils.getDatelessHour(date, this.configuration.military_time);\n        },\n        formatDayTitle: (date) => {\n          let isoDate = new Date(date);\n          let dayName = isoDate.toUTCString().slice(0, 3);\n          let dayNumber = isoDate.getUTCDate();\n          return [dayName, dayNumber];\n        },\n        formatWeekNavigator: (isoDate) => {\n          let startDate = Utils.startOfWeek(isoDate);\n          let endDate = Utils.endOfWeek(isoDate);\n          let startString = startDate.toUTCString().slice(5, 11);\n          let endString = endDate.toUTCString().slice(5, 11);\n          return `${startString} - ${endString}`;\n        },\n        formatDayNavigator: (isoDate) => {\n          let day = new Date(isoDate);\n          return day.toUTCString().slice(5, 11);\n        }\n      },\n      kalendar_events: null,\n      new_appointment: {},\n      scrollable: true,\n    }\n  },\n  computed: {\n    kalendar_options() {\n      let options = this.default_options;\n      let provided_props = this.configuration;\n\n      let conditions = {\n        //dark: (val) => typeof val === 'boolean',\n        scrollToNow: (val) => typeof val === 'boolean',\n        current_week: (val) => val === null,\n        current_day: (val) => !isNaN(Date.parse(val)),\n        view_type: (val) => ['week', 'day'].includes(val),\n        cell_height: (val) => !isNaN(val),\n        style: (val) => ['material_design', 'flat_design'].includes(val),\n        military_time: (val) => typeof val === 'boolean',\n        read_only: (val) => typeof val === 'boolean',\n        day_starts_at: (val) => {\n          return typeof val === 'number' &&\n            val >= 0 &&\n            val <= 24;\n        },\n        day_ends_at: (val) => {\n          return typeof val === 'number' &&\n            val >= 0 &&\n            val <= 24;\n        },\n        hide_dates: val => Array.isArray(val),\n        hide_days: val => Array.isArray(val) && !val.find(n => typeof n !== 'number'),\n        overlap: val => typeof val === 'boolean',\n        past_event_creation: val => typeof val === 'boolean',\n        formatLeftHours: val => typeof val === 'function',\n        formatDayTitle: val => typeof val === 'function',\n        formatWeekNavigator: val => typeof val === 'function'\n      };\n      for (let key in provided_props) {\n        if (conditions.hasOwnProperty(key) && conditions[key](provided_props[key])) {\n          options[key] = provided_props[key];\n        }\n      }\n      return options;\n    }\n  },\n  created() {\n    this.kalendar_events = this.events.map(event => ({\n      ...event,\n      id: event.id || kalendarHelpers.generateUUID()\n    }));\n\n    this.$kalendar.getEvents = () => {\n      return this.kalendar_events.slice(0);\n    }\n\n    this.$kalendar.updateEvents = (payload) => {\n      this.kalendar_events = payload.map(event => ({\n        ...event,\n        id: event.id || kalendarHelpers.generateUUID()\n      }));\n      this.$emit('update:events', payload.map(event => ({\n        from: event.from,\n        to: event.to,\n        data: event.data\n      })));\n    };\n  },\n  provide() {\n    const provider = {}\n    Object.defineProperty(provider, 'kalendar_options', {\n      enumerable: true,\n      get: () => this.kalendar_options,\n    });\n    Object.defineProperty(provider, 'kalendar_events', {\n      enumerable: true,\n      get: () => this.kalendar_events,\n    });\n    return provider;\n  },\n  methods: {\n    previousDay() {\n      let { current_day } = this.kalendar_options;\n      let target_day = kalendarHelpers.addDays(current_day, -1);\n      let config = kalendarHelpers.cloneObject(this.configuration);\n      config = {\n        ...config,\n        current_day: target_day.toISOString()\n      };\n      this.$emit('update:configuration', config);\n      setTimeout(() => {\n        this.$kalendar.buildWeek();\n      });\n    },\n    nextDay() {\n      let { current_day } = this.kalendar_options;\n      let target_day = kalendarHelpers.addDays(current_day, 1);\n      let config = kalendarHelpers.cloneObject(this.configuration);\n      config = {\n        ...config,\n        current_day: target_day.toISOString()\n      };\n      this.$emit('update:configuration', config);\n      setTimeout(() => {\n        this.$kalendar.buildWeek();\n      });\n    },\n    previousWeek() {\n      let { current_day } = this.kalendar_options;\n      let nextWeek = new Date(current_day);\n      nextWeek.setDate(nextWeek.getDate() - 7);\n      nextWeek.setUTCHours(0, 0, 0, 0);\n\n      let config = kalendarHelpers.cloneObject(this.configuration);\n      config = {\n        ...config,\n        current_day: nextWeek.toISOString()\n      };\n\n      this.$emit('update:configuration', config);\n      setTimeout(() => {\n        this.$kalendar.buildWeek();\n      });\n    },\n    nextWeek() {\n      let { current_day } = this.kalendar_options;\n      let nextWeek = new Date(current_day);\n      nextWeek.setDate(nextWeek.getDate() + 7);\n      nextWeek.setUTCHours(0, 0, 0, 0);\n\n      let config = kalendarHelpers.cloneObject(this.configuration);\n      config = {\n        ...config,\n        current_day: nextWeek.toISOString()\n      };\n\n      this.$emit('update:configuration', config);\n      setTimeout(() => {\n        this.$kalendar.buildWeek();\n      });\n    },\n    getTime(date) {\n      let dateObj = new Date(date);\n      let minutes = dateObj.getUTCHours().toString().padStart(2, 0);\n      let seconds = dateObj.getUTCMinutes().toString().padStart(2, 0);\n      return `${minutes}:${seconds}`;\n    },\n    addAppointment(popup_info) {\n      let payload = {\n        data: {\n          title: this.new_appointment.title,\n          description: this.new_appointment.description,\n        },\n        from: popup_info.start_time,\n        to: popup_info.end_time,\n      };\n\n      this.$kalendar.addNewEvent(\n        payload,\n      );\n      this.$kalendar.closePopups();\n      this.clearFormData();\n    },\n    clearFormData() {\n      this.new_appointment = {\n        description: null,\n        title: null,\n      };\n    },\n    closePopups() {\n      this.$kalendar.closePopups();\n    },\n  }\n}\n</script>\n<style lang=\"scss\"\n       src=\"./main.scss\"></style>\n"],"sourceRoot":"src/components/kalendar"}]}