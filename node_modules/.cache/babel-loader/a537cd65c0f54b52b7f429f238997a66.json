{"remainingRequest":"/home/david/workspace/kalendar/node_modules/babel-loader/lib/index.js!/home/david/workspace/kalendar/src/components/kalendar/workers/worker.js","dependencies":[{"path":"/home/david/workspace/kalendar/src/components/kalendar/workers/worker.js","mtime":1566976249008},{"path":"/home/david/workspace/kalendar/node_modules/cache-loader/dist/cjs.js","mtime":1564752366860},{"path":"/home/david/workspace/kalendar/node_modules/babel-loader/lib/index.js","mtime":1564752363126}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"/home/david/workspace/kalendar/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.date.to-iso-string\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport registerPromiseWorker from 'promise-worker/register';\nimport Utils from \"../utils.js\";\nvar generateUUID = Utils.generateUUID,\n    addDays = Utils.addDays,\n    addMinutes = Utils.addMinutes,\n    addHours = Utils.addHours,\n    getYearMonthDay = Utils.getYearMonthDay,\n    getLocaleTime = Utils.getLocaleTime;\nimport hourUtils from \"../hours.js\";\nregisterPromiseWorker(function (message) {\n  var type = message.type,\n      data = message.data;\n\n  if (type === 'message') {\n    return \"Worker replies: \".concat(new Date().toISOString());\n  }\n\n  switch (type) {\n    case 'getDays':\n      return getDays(data.day, data.options);\n\n    case 'getHours':\n      return getHours(data.hourOptions);\n\n    case 'getDayCells':\n      return getDayCells(data.day, data.hourOptions);\n\n    case 'constructDayEvents':\n      return constructDayEvents(data.day, data.events);\n\n    case 'constructNewEvent':\n      return constructNewEvent(data.event);\n  }\n});\n\nfunction getDays(dayString, _ref) {\n  var hide_dates = _ref.hide_dates,\n      hide_days = _ref.hide_days,\n      view_type = _ref.view_type;\n  var date = new Date(\"\".concat(dayString, \"T00:00:00.000Z\"));\n  var day_of_week = date.getUTCDay() - 1;\n  var days = [];\n\n  if (view_type === 'day') {\n    days = [{\n      value: date.toISOString(),\n      index: 0\n    }];\n  } else {\n    for (var idx = 0; idx < 7; idx++) {\n      days.push({\n        value: addDays(date, idx - day_of_week).toISOString(),\n        index: idx\n      });\n    }\n  }\n\n  if (hide_dates && hide_dates.length > 0) {\n    days = days.filter(function (_ref2) {\n      var value = _ref2.value;\n      return hide_dates.indexOf(value.slice(0, 10)) < 0;\n    });\n  }\n\n  if (hide_days && hide_days.length > 0) {\n    days = days.filter(function (_ref3) {\n      var index = _ref3.index;\n      return hide_days.indexOf(index) < 0;\n    });\n  }\n\n  return days;\n}\n\nfunction getHours(day_options) {\n  var date = new Date();\n  date.setUTCHours(0, 0, 0, 0);\n  var iso_date = getYearMonthDay(date);\n  var day_hours = hourUtils.getFullHours();\n\n  if (day_options) {\n    var start_hour = day_options.start_hour,\n        end_hour = day_options.end_hour;\n    day_hours = day_hours.slice(start_hour, end_hour);\n  }\n\n  var hours = [];\n\n  for (var idx = 0; idx < day_hours.length; idx++) {\n    var value = \"\".concat(iso_date, \"T\").concat(day_hours[idx], \".000Z\");\n    hours.push({\n      value: value,\n      index: idx,\n      visible: true\n    });\n  }\n\n  return hours;\n}\n\nvar getDayCells = function getDayCells(dayString, day_options) {\n  if (new Date(dayString).toISOString() !== dayString) {\n    throw new Error('Unsupported dayString parameter provided');\n  }\n\n  ;\n  var cells = [];\n  var date_part = dayString.slice(0, 10);\n  var all_hours = hourUtils.getAllHours();\n\n  if (day_options) {\n    var start_hour = day_options.start_hour,\n        end_hour = day_options.end_hour;\n    var start_index = start_hour * 6;\n    var end_index = end_hour * 6 + 1;\n    all_hours = all_hours.slice(start_index, end_index);\n  }\n\n  for (var hourIdx = 0; hourIdx < all_hours.length; hourIdx++) {\n    var hour = all_hours[hourIdx];\n    var value = \"\".concat(date_part, \"T\").concat(hour, \".000Z\");\n    cells.push({\n      value: value,\n      index: hourIdx,\n      visible: true\n    });\n  }\n\n  return cells;\n};\n\nvar constructDayEvents = function constructDayEvents(day, existing_events) {\n  var events_for_this_day = existing_events.map(function (event) {\n    var from = event.from,\n        to = event.to;\n    from = getLocaleTime(from);\n    to = getLocaleTime(to);\n    return _objectSpread({}, event, {\n      from: from,\n      to: to\n    });\n  }).filter(function (_ref4) {\n    var from = _ref4.from;\n    return from.slice(0, 10) === day.slice(0, 10);\n  });\n  if (events_for_this_day.length === 0) return {};\n  var filtered_events = {};\n  events_for_this_day.forEach(function (event) {\n    var constructedEvent = constructNewEvent(event);\n    var key = constructedEvent.key;\n\n    if (filtered_events.hasOwnProperty(key)) {\n      filtered_events[key].push(constructedEvent);\n    } else {\n      filtered_events[key] = [constructedEvent];\n    }\n  });\n  return filtered_events;\n};\n\nvar constructNewEvent = function constructNewEvent(event) {\n  var from = event.from,\n      to = event.to;\n  from = new Date(from);\n  to = new Date(to);\n  from.setUTCSeconds(0, 0);\n  to.setUTCSeconds(0, 0);\n  var from_value = from.toISOString();\n  var masked_from = new Date(from.getTime());\n  var masked_to = new Date(to.getTime());\n  var fromData = {\n    value: from_value,\n    masked_value: masked_from.toISOString(),\n    rounded: false,\n    round_offset: null\n  };\n  var to_value = to.toISOString();\n  var toData = {\n    value: to_value,\n    masked_value: masked_to.toISOString(),\n    rounded: false,\n    round_offset: null\n  };\n\n  var multipleOf10 = function multipleOf10(dateStr) {\n    return new Date(dateStr).getMinutes() % 10;\n  };\n\n  if (multipleOf10(fromData.value) !== 0) {\n    fromData.rounded = true;\n    fromData.round_offset = multipleOf10(fromData.value);\n    var minutes = new Date(fromData.value).getMinutes();\n    var maskedMinutes = Math.floor(minutes / 10) * 10;\n    masked_from.setMinutes(maskedMinutes);\n    fromData.masked_value = masked_from.toISOString();\n  }\n\n  var eventKey = masked_from.toISOString(); // 1 minute equals 1 pixel in our view. That means we need to find the length\n  // of the event by finding out the difference in minutes \n\n  var diffInMs = to - from;\n  var diffInHrs = Math.floor(diffInMs % 86400000 / 3600000);\n  var diffMins = Math.round(diffInMs % 86400000 % 3600000 / 60000);\n  var constructedEvent = {\n    start: fromData,\n    end: toData,\n    data: event.data,\n    id: event.id || generateUUID(),\n    distance: diffMins + diffInHrs * 60,\n    status: 'completed',\n    key: eventKey\n  };\n  console.log('Constructed event:', constructedEvent);\n  return constructedEvent;\n};\n/**\n * @param {int} The month number, 0 based\n * @param {int} The year, not zero based, required to account for leap years\n * @return {Date[]} List with date objects for each day of the month\n */\n\n\nvar getDaysInMonth = function getDaysInMonth(month, year) {\n  var date = new Date(year, month, 1);\n  var days = [];\n\n  while (date.getMonth() === month) {\n    days.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n  }\n\n  return days;\n};",{"version":3,"sources":["/home/david/workspace/kalendar/src/components/kalendar/workers/worker.js"],"names":["registerPromiseWorker","Utils","generateUUID","addDays","addMinutes","addHours","getYearMonthDay","getLocaleTime","hourUtils","message","type","data","Date","toISOString","getDays","day","options","getHours","hourOptions","getDayCells","constructDayEvents","events","constructNewEvent","event","dayString","hide_dates","hide_days","view_type","date","day_of_week","getUTCDay","days","value","index","idx","push","length","filter","indexOf","slice","day_options","setUTCHours","iso_date","day_hours","getFullHours","start_hour","end_hour","hours","visible","Error","cells","date_part","all_hours","getAllHours","start_index","end_index","hourIdx","hour","existing_events","events_for_this_day","map","from","to","filtered_events","forEach","constructedEvent","key","hasOwnProperty","setUTCSeconds","from_value","masked_from","getTime","masked_to","fromData","masked_value","rounded","round_offset","to_value","toData","multipleOf10","dateStr","getMinutes","minutes","maskedMinutes","Math","floor","setMinutes","eventKey","diffInMs","diffInHrs","diffMins","round","start","end","id","distance","status","console","log","getDaysInMonth","month","year","getMonth","setDate","getDate"],"mappings":"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","sourcesContent":["import registerPromiseWorker from 'promise-worker/register'\nimport Utils from '../utils.js';\nconst {\n  generateUUID,\n  addDays,\n  addMinutes,\n  addHours,\n  getYearMonthDay,\n  getLocaleTime\n} = Utils;\nimport hourUtils from '../hours.js';\n\nregisterPromiseWorker((message) => {\n  const { type, data } = message;\n  if (type === 'message') {\n    return `Worker replies: ${new Date().toISOString()}`\n  }\n\n  switch (type) {\n    case 'getDays':\n      return getDays(data.day, data.options);\n    case 'getHours':\n      return getHours(data.hourOptions);\n    case 'getDayCells':\n      return getDayCells(data.day, data.hourOptions);\n    case 'constructDayEvents':\n      return constructDayEvents(data.day, data.events);\n    case 'constructNewEvent':\n      return constructNewEvent(data.event)\n  }\n})\n\nfunction getDays(dayString, { hide_dates, hide_days, view_type }) {\n  let date = new Date(`${dayString}T00:00:00.000Z`);\n  let day_of_week = date.getUTCDay() - 1;\n  let days = [];\n  if (view_type === 'day') {\n    days = [{\n      value: date.toISOString(),\n      index: 0\n    }];\n  } else {\n    for (let idx = 0; idx < 7; idx++) {\n      days.push({\n        value: addDays(date, idx - day_of_week).toISOString(),\n        index: idx,\n      });\n    }\n  }\n  if (hide_dates && hide_dates.length > 0) {\n    days = days.filter(({ value }) => {\n      return hide_dates.indexOf(value.slice(0, 10)) < 0;\n    });\n  }\n  if (hide_days && hide_days.length > 0) {\n    days = days.filter(({ index }) => {\n      return hide_days.indexOf(index) < 0;\n    });\n  }\n  return days;\n}\n\nfunction getHours(day_options) {\n  let date = new Date();\n  date.setUTCHours(0, 0, 0, 0);\n  let iso_date = getYearMonthDay(date);\n\n  let day_hours = hourUtils.getFullHours();\n  if (day_options) {\n    let { start_hour, end_hour } = day_options;\n    day_hours = day_hours.slice(start_hour, end_hour)\n  }\n  let hours = [];\n  for (let idx = 0; idx < day_hours.length; idx++) {\n    let value = `${iso_date}T${day_hours[idx]}.000Z`;\n    hours.push({\n      value,\n      index: idx,\n      visible: true\n    });\n  }\n  return hours;\n}\n\nconst getDayCells = (dayString, day_options) => {\n  if (new Date(dayString).toISOString() !== dayString) {\n    throw new Error('Unsupported dayString parameter provided');\n  };\n\n  let cells = [];\n  let date_part = dayString.slice(0, 10);\n  let all_hours = hourUtils.getAllHours();\n  if (day_options) {\n    let { start_hour, end_hour } = day_options;\n    let start_index = start_hour * 6;\n    let end_index = (end_hour * 6) + 1;\n    all_hours = all_hours.slice(start_index, end_index);\n  }\n  for (let hourIdx = 0; hourIdx < all_hours.length; hourIdx++) {\n    let hour = all_hours[hourIdx];\n    let value = `${date_part}T${hour}.000Z`;\n    cells.push({\n      value,\n      index: hourIdx,\n      visible: true\n    });\n  }\n  return cells;\n}\n\nconst constructDayEvents = (day, existing_events) => {\n  let events_for_this_day = existing_events\n    .map(event => {\n      let { from, to } = event;\n      from = getLocaleTime(from);\n      to = getLocaleTime(to);\n      return {\n        ...event,\n        from,\n        to\n      }\n    }).filter(({ from }) => {\n      return from.slice(0, 10) === day.slice(0, 10);\n    });\n\n  if (events_for_this_day.length === 0) return {};\n  let filtered_events = {};\n  events_for_this_day.forEach(event => {\n    const constructedEvent = constructNewEvent(event);\n    let { key } = constructedEvent;\n    if (filtered_events.hasOwnProperty(key)) {\n      filtered_events[key].push(constructedEvent);\n    } else {\n      filtered_events[key] = [constructedEvent];\n    }\n  });\n  return filtered_events;\n}\n\nconst constructNewEvent = (event) => {\n  let { from, to } = event;\n\n  from = new Date(from);\n  to = new Date(to);\n\n  from.setUTCSeconds(0, 0);\n  to.setUTCSeconds(0, 0);\n  let from_value = from.toISOString();\n  let masked_from = new Date(from.getTime());\n  let masked_to = new Date(to.getTime());\n  const fromData = {\n    value: from_value,\n    masked_value: masked_from.toISOString(),\n    rounded: false,\n    round_offset: null\n  };\n  const to_value = to.toISOString();\n  const toData = {\n    value: to_value,\n    masked_value: masked_to.toISOString(),\n    rounded: false,\n    round_offset: null,\n  };\n\n  let multipleOf10 = (dateStr) => new Date(dateStr).getMinutes() % 10;\n\n  if (multipleOf10(fromData.value) !== 0) {\n    fromData.rounded = true;\n    fromData.round_offset = multipleOf10(fromData.value);\n    let minutes = new Date(fromData.value).getMinutes();\n    let maskedMinutes = (Math.floor(minutes / 10) * 10);\n    masked_from.setMinutes(maskedMinutes);\n    fromData.masked_value = masked_from.toISOString();\n  }\n\n  let eventKey = masked_from.toISOString();\n\n  // 1 minute equals 1 pixel in our view. That means we need to find the length\n  // of the event by finding out the difference in minutes \n  const diffInMs = to - from;\n  const diffInHrs = Math.floor((diffInMs % 86400000) / 3600000);\n  const diffMins = Math.round(((diffInMs % 86400000) % 3600000) / 60000);\n\n  let constructedEvent = {\n    start: fromData,\n    end: toData,\n    data: event.data,\n    id: event.id || generateUUID(),\n    distance: diffMins + (diffInHrs * 60),\n    status: 'completed',\n    key: eventKey\n  };\n\n  console.log('Constructed event:', constructedEvent);\n\n  return constructedEvent;\n}\n\n/**\n * @param {int} The month number, 0 based\n * @param {int} The year, not zero based, required to account for leap years\n * @return {Date[]} List with date objects for each day of the month\n */\nconst getDaysInMonth = (month, year) => {\n  var date = new Date(year, month, 1);\n  var days = [];\n  while (date.getMonth() === month) {\n    days.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n  }\n  return days;\n}"]}]}