{"remainingRequest":"/home/david/workspace/kalendar/node_modules/babel-loader/lib/index.js!/home/david/workspace/kalendar/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/workspace/kalendar/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/workspace/kalendar/src/components/kalendar/kalendar-cell.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/workspace/kalendar/src/components/kalendar/kalendar-cell.vue","mtime":1566976249008},{"path":"/home/david/workspace/kalendar/node_modules/cache-loader/dist/cjs.js","mtime":1564752366860},{"path":"/home/david/workspace/kalendar/node_modules/babel-loader/lib/index.js","mtime":1564752363126},{"path":"/home/david/workspace/kalendar/node_modules/cache-loader/dist/cjs.js","mtime":1564752366860},{"path":"/home/david/workspace/kalendar/node_modules/vue-loader/lib/index.js","mtime":1564752367572}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"/home/david/workspace/kalendar/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.filter\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar cloneObject = window.kalendarHelpers.cloneObject;\nexport default {\n  props: ['creator', 'index', 'cellData', 'constructedEvents', 'temporaryEvent'],\n  inject: ['kalendar_options'],\n  components: {\n    KalendarEvent: function KalendarEvent() {\n      return import(\"./kalendar-event.vue\");\n    }\n  },\n  computed: {\n    cell_events: function cell_events() {\n      var all_events = [];\n\n      if (this.completed_events) {\n        all_events = all_events.concat(this.completed_events);\n      }\n\n      if (this.being_created) {\n        all_events = all_events.concat(this.being_created);\n      }\n\n      return all_events;\n    },\n    completed_events: function completed_events() {\n      return this.constructedEvents && this.constructedEvents.hasOwnProperty(this.cellData.value) && this.constructedEvents[this.cellData.value];\n    },\n    being_created: function being_created() {\n      return this.temporaryEvent && this.temporaryEvent.start.value === this.cellData.value && this.temporaryEvent;\n    },\n    overlappingEvents: function overlappingEvents() {\n      var _this = this;\n\n      if (!this.constructedEvents || this.cell_events.length < 1) return [];\n      return Object.keys(this.constructedEvents).map(function (evKey) {\n        return _this.constructedEvents[evKey];\n      }).flat().filter(function (event) {\n        var cellDate = new Date(_this.cellData.value);\n        var eventStarts = new Date(event.start.value);\n        var eventEnds = new Date(event.end.value);\n        return eventStarts < cellDate && eventEnds > cellDate;\n      });\n    },\n    overlapValue: function overlapValue() {\n      var length = this.overlappingEvents.length;\n      return length > 2 ? 2 : length;\n    },\n    selected: function selected() {\n      return this.cell_events && this.cell_events.length > 0;\n    },\n    hasPopups: function hasPopups() {\n      return this.selected && !!this.cell_events.find(function (ev) {\n        return ev.status === 'popup-initiated';\n      });\n    }\n  },\n  methods: {\n    mouseDown: function mouseDown() {\n      // user mouse got depressed while outside kalendar-cells\n      // came back in and clicked while the creator was on\n      if (!!this.creator.creating) {\n        this.mouseUp();\n        return;\n      }\n\n      var _this$kalendar_option = this.kalendar_options,\n          read_only = _this$kalendar_option.read_only,\n          overlap = _this$kalendar_option.overlap,\n          past_event_creation = _this$kalendar_option.past_event_creation;\n      if (read_only) return; // if past_event_creation is set to false, check if cell value is\n      // before current time\n\n      if (past_event_creation === false) {\n        var now = kalendarHelpers.getLocaleTime(new Date());\n\n        if (new Date(now) > new Date(this.cellData.value)) {\n          this.mouseUp();\n          return;\n        }\n      } // if overlap is set to false, prevent selection on top of\n      // other events\n\n\n      console.log('Cell events:', this.cell_events.length);\n      if (!overlap && this.cell_events.length > 0) return; // close any open popups in the whole kalendar instance\n      // before starting a new one\n\n      this.$kalendar.closePopups(); // create a payload consisting of\n      // starting, current, ending and originalStarting cell\n      // starting, current and ending are self explanatory\n      // but originalStarting cell is required\n      // to determine the direction of the scroll/drag\n\n      var payload = {\n        creating: true,\n        original_starting_cell: cloneObject(this.cellData),\n        starting_cell: cloneObject(this.cellData),\n        current_cell: cloneObject(this.cellData),\n        ending_cell: cloneObject(this.cellData)\n      };\n      this.$emit('select', payload);\n    },\n    mouseMove: function mouseMove() {\n      // same guards like in the mouseDown function\n      var _this$kalendar_option2 = this.kalendar_options,\n          read_only = _this$kalendar_option2.read_only,\n          overlap = _this$kalendar_option2.overlap;\n      if (read_only) return;\n      if (this.creator && !this.creator.creating) return;\n      var _this$creator = this.creator,\n          starting_cell = _this$creator.starting_cell,\n          original_starting_cell = _this$creator.original_starting_cell,\n          creating = _this$creator.creating; // direction of scroll\n\n      var going_down = this.cellData.index >= starting_cell.index && starting_cell.index === original_starting_cell.index;\n\n      if (creating) {\n        var payload = _objectSpread({}, this.creator, {\n          current_cell: this.cellData,\n          ending_cell: this.cellData,\n          direction: going_down ? 'normal' : 'reverse'\n        });\n\n        this.$emit('select', payload);\n      }\n    },\n    mouseUp: function mouseUp() {\n      if (this.kalendar_options.read_only) return;\n\n      if (this.creator.creating) {\n        this.$emit('initiatePopup');\n      }\n    },\n    resetCreator: function resetCreator() {\n      this.$emit('reset');\n    }\n  }\n};",{"version":3,"sources":["kalendar-cell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <li v-if=\"cellData.visible\"\n      @mouseover.self=\"mouseMove()\"\n      @mousedown.self=\"mouseDown()\"\n      @mouseup=\"mouseUp()\"\n      class=\"kalendar-cell\"\n      :class=\"{\n      'selected': selected, \n      'is-an-hour': (index+1)%(60/10) === 0,\n      'has-events': cell_events && cell_events.length > 0,\n      'being-created': !!being_created || hasPopups\n    }\"\n      :style=\"`\n      height: ${kalendar_options.cell_height}px;\n    `\">\n    <KalendarEvent :style=\"`z-index: 10`\"\n                   v-if=\"cell_events && cell_events.length\"\n                   v-for=\"(event, eventIndex) in cell_events\"\n                   :event=\"event\"\n                   :key=\"eventIndex\"\n                   :total=\"cell_events.length\"\n                   :index=\"eventIndex\"\n                   :overlaps=\"overlapValue\" />\n  </li>\n</template>\n<script>\nconst { cloneObject } = window.kalendarHelpers;\n\nexport default {\n  props: ['creator', 'index', 'cellData', 'constructedEvents', 'temporaryEvent'],\n  inject: ['kalendar_options'],\n  components: {\n    KalendarEvent: () => import('./kalendar-event.vue'),\n  },\n  computed: {\n    cell_events() {\n      let all_events = [];\n      if (this.completed_events) {\n        all_events = all_events.concat(this.completed_events);\n      }\n      if (this.being_created) {\n        all_events = all_events.concat(this.being_created);\n      }\n      return all_events;\n    },\n    completed_events() {\n      return this.constructedEvents &&\n        this.constructedEvents.hasOwnProperty(this.cellData.value) &&\n        this.constructedEvents[this.cellData.value];\n    },\n    being_created() {\n      return (this.temporaryEvent &&\n        this.temporaryEvent.start.value === this.cellData.value &&\n        this.temporaryEvent);\n    },\n    overlappingEvents() {\n      if (!this.constructedEvents || this.cell_events.length < 1) return [];\n      return Object.keys(this.constructedEvents)\n        .map(evKey => {\n          return this.constructedEvents[evKey]\n        })\n        .flat()\n        .filter(event => {\n          let cellDate = new Date(this.cellData.value);\n          let eventStarts = new Date(event.start.value);\n          let eventEnds = new Date(event.end.value);\n          return eventStarts < cellDate && eventEnds > cellDate;\n        });\n    },\n    overlapValue() {\n      let length = this.overlappingEvents.length;\n      return length > 2 ? 2 : length;\n    },\n    selected() {\n      return this.cell_events && this.cell_events.length > 0;\n    },\n    hasPopups() {\n      return this.selected && !!this.cell_events.find(ev => ev.status === 'popup-initiated');\n    }\n  },\n  methods: {\n    mouseDown() {\n      // user mouse got depressed while outside kalendar-cells\n      // came back in and clicked while the creator was on\n      if (!!this.creator.creating) {\n        this.mouseUp();\n        return;\n      }\n      let { read_only, overlap, past_event_creation } = this.kalendar_options;\n      if(read_only) return;\n\n      // if past_event_creation is set to false, check if cell value is\n      // before current time\n      if (past_event_creation === false) {\n        let now = kalendarHelpers.getLocaleTime(new Date());\n        if (new Date(now) > new Date(this.cellData.value)) {\n          this.mouseUp();\n          return;\n        }\n      }\n\n      // if overlap is set to false, prevent selection on top of\n      // other events\n      console.log('Cell events:', this.cell_events.length);\n      if (!overlap && this.cell_events.length > 0) return;\n\n      // close any open popups in the whole kalendar instance\n      // before starting a new one\n      this.$kalendar.closePopups();\n\n      // create a payload consisting of\n      // starting, current, ending and originalStarting cell\n      // starting, current and ending are self explanatory\n      // but originalStarting cell is required\n      // to determine the direction of the scroll/drag\n      let payload = {\n        creating: true,\n        original_starting_cell: cloneObject(this.cellData),\n        starting_cell: cloneObject(this.cellData),\n        current_cell: cloneObject(this.cellData),\n        ending_cell: cloneObject(this.cellData)\n      };\n      this.$emit('select', payload);\n    },\n    mouseMove() {\n      // same guards like in the mouseDown function\n      let { read_only, overlap } = this.kalendar_options;\n      if (read_only) return;\n      if (this.creator && !this.creator.creating) return;\n      let { starting_cell, original_starting_cell, creating } = this.creator;\n\n      // direction of scroll\n      let going_down = this.cellData.index >= starting_cell.index &&\n        starting_cell.index === original_starting_cell.index;\n\n      if (creating) {\n        let payload = {\n          ...this.creator,\n          current_cell: this.cellData,\n          ending_cell: this.cellData,\n          direction: going_down ? 'normal' : 'reverse'\n        };\n        this.$emit('select', payload);\n      }\n    },\n    mouseUp() {\n      if (this.kalendar_options.read_only) return;\n      if (this.creator.creating) {\n        this.$emit('initiatePopup');\n      }\n    },\n    resetCreator() {\n      this.$emit('reset');\n    },\n  },\n}\n</script>\n<style lang=\"scss\">\n$creator-bg: #34aadc;\n$creator-content: white;\n\nli {\n  font-size: 13px;\n  position: relative;\n}\n\n.created-events {\n  //width: 100%;\n  height: 100%;\n}\n\nul.building-blocks {\n  li {\n    z-index: 0;\n    border-bottom: dotted 1px var(--odd-cell-border-color);\n\n    &.first_of_appointment {\n      z-index: 1;\n      opacity: 1; //z-index:0;\n    }\n\n    &.is-an-hour {\n      border-bottom: solid 1px var(--table-cell-border-color);\n    }\n\n    &.has-events {\n      z-index: unset;\n    }\n\n    &.being-created {\n      z-index: 11;\n    }\n  }\n}\n</style>"],"sourceRoot":"src/components/kalendar"}]}